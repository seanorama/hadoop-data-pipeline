agent.sources = eventlog
agent.channels = file_channel
agent.sinks = sink_to_hdfs

# Define / Configure source
agent.sources.eventlog.type = spooldir
agent.sources.eventlog.spoolDir = /tmp/data_pipeline_demo/input
agent.sources.eventlog.fileHeader = true
agent.sources.eventlog.basenameHeader = true


# HDFS sinks
agent.sinks.sink_to_hdfs.type = hdfs
agent.sinks.sink_to_hdfs.hdfs.proxyUser = admin
agent.sinks.sink_to_hdfs.hdfs.fileType = DataStream
agent.sinks.sink_to_hdfs.hdfs.path = /user/admin/data_pipeline_demo/data/input
agent.sinks.sink_to_hdfs.hdfs.filePrefix = %{basename}
agent.sinks.sink_to_hdfs.hdfs.fileSuffix = .input
agent.sinks.sink_to_hdfs.hdfs.inUseSuffix = .intransit
agent.sinks.sink_to_hdfs.hdfs.rollCount = 0
agent.sinks.sink_to_hdfs.hdfs.rollInterval = 0
agent.sinks.sink_to_hdfs.hdfs.rollSize = 0
agent.sinks.sink_to_hdfs.hdfs.idleTimeout = 3

# Use a channel which buffers events in memory
agent.channels.file_channel.type = file
agent.channels.file_channel.checkpointDir = /var/lib/flume/checkpoint
agent.channels.file_channel.dataDirs = /var/lib/flume/data

# Bind the source and sink to the channel
agent.sources.eventlog.channels = file_channel
agent.sinks.sink_to_hdfs.channel = file_channel
